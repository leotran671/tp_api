swagger: "2.0"
info:
  version: "1.0.0"
  title: "Restaurant API"
  description: "API documentation for a restaurant management system"
basePath: "/tp_api
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
definitions:
  Admin:
    type: "object"
    required:
      - pincode
    properties:
      pincode:
        type: "string"
        minLength: 4
  Service:
    type: "object"
    required:
      - shiftType
      - shiftClosed
    properties:
      shiftType:
        type: "string"
      shiftClosed:
        type: "boolean"
  User:
    type: "object"
    required:
      - firstname
      - lastname
      - status
      - active
    properties:
      firstname:
        type: "string"
      lastname:
        type: "string"
      status:
        type: "string"
      active:
        type: "boolean"
  TableTip:
    type: "object"
    required:
      - tips
      - id_service
      - id_restaurantTable
    properties:
      tips:
        type: "number"
      id_service:
        type: "integer"
      id_restaurantTable:
        type: "integer"
  RestaurantTable:
    type: "object"
    required:
      - name
    properties:
      name:
        type: "string"
parameters:
  serviceIdParam:
    name: "id"
    in: "path"
    description: "ID of the service to fetch"
    required: true
    type: "integer"
paths:
  /admin/login:
    post:
      tags:
        - "Admin"
      summary: "Login with admin credentials"
      description: "Authenticate an admin user and return a JWT token"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Admin credentials for login"
          required: true
          schema:
            type: "object"
            properties:
              pincode:
                type: "string"
                minLength: 4
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
            example:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Invalid pincode"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Admin not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /services:
    get:
      tags:
        - "Services"
      summary: "Get all services"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              services:
                type: "array"
                items:
                  $ref: "#/definitions/Service"
            example:
              services:
                - shiftType: "morning"
                  shiftClosed: false
                - shiftType: "evening"
                  shiftClosed: true
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    post:
      tags:
        - "Services"
      summary: "Create a new service"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Service object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/Service"
      produces:
        - "application/json"
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              service:
                $ref: "#/definitions/Service"
            example:
              service:
                shiftType: "evening"
                shiftClosed: true
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /services/{id}:
    get:
      tags:
        - "Services"
      summary: "Get a service by ID"
      parameters:
        - $ref: "#/parameters/serviceIdParam"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              service:
                $ref: "#/definitions/Service"
            example:
              service:
                shiftType: "evening"
                shiftClosed: true
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Service not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    put:
      tags:
        - "Services"
      summary: "Update a service by ID"
      consumes:
        - "application/json"
      parameters:
        - $ref: "#/parameters/serviceIdParam"
        - name: "body"
          in: "body"
          description: "Service object that needs to be updated in the system"
          required: true
          schema:
            $ref: "#/definitions/Service"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              service:
                $ref: "#/definitions/Service"
            example:
              service:
                shiftType: "evening"
                shiftClosed: true
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Service not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    delete:
      tags:
        - "Services"
      summary: "Delete a service by ID"
      parameters:
        - $ref: "#/parameters/serviceIdParam"
      produces:
        - "application/json"
      responses:
        "204":
          description: "No Content"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
            example:
              message: "Service deleted"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Service not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /tips:
    get:
      tags:
        - "Tips"
      summary: "Get all tips"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              tips:
                type: "array"
                items:
                  $ref: "#/definitions/TableTip"
            example:
              tips:
                - amount: 5
                  id_user: 1
                  id_restaurantTable: 1
                  id_service: 1
                - amount: 10
                  id_user: 2
                  id_restaurantTable: 2
                  id_service: 2
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    post:
      tags:
        - "Tips"
      summary: "Create a new tip"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Tip object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/TableTip"
      produces:
        - "application/json"
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              tabletip:
                $ref: "#/definitions/TableTip"
            example:
              tabletip:
                amount: 5
                id_user: 1
                id_restaurantTable: 1
                id_service: 1
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Restaurant table not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /tips/{id}:
    get:
      tags:
        - "
        - $ref: "#/parameters/tipIdParam"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              tip:
                $ref: "#/definitions/TableTip"
            example:
              tip:
                amount: 5
                id_user: 1
                id_restaurantTable: 1
                id_service: 1
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Tip not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    put:
      tags:
        - "Tips"
      summary: "Update a tip by ID"
      consumes:
        - "application/json"
      parameters:
        - $ref: "#/parameters/tipIdParam"
        - name: "body"
          in: "body"
          description: "Tip object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/TableTip"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              tip:
                $ref: "#/definitions/TableTip"
            example:
              tip:
                amount: 10
                id_user: 2
                id_restaurantTable: 2
                id_service: 2
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Tip not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    delete:
      tags:
        - "Tips"
      summary: "Delete a tip by ID"
      parameters:
        - $ref: "#/parameters/tipIdParam"
      produces:
        - "application/json"
      responses:
        "204":
          description: "No Content"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
            example:
              message: "Tip deleted"
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Tip not found"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /tables:
    post:
      tags:
        - "Tables"
      summary: "Create a new restaurant table"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Table object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/RestaurantTable"
      produces:
        - "application/json"
      responses:
       
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              table:
                $ref: "#/definitions/RestaurantTable"
            example:
              table:
                id: 3
                name: "Table 3"
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /users:
    get:
      tags:
        - "Users"
      summary: "Get all users"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              users:
                type: "array"
                items:
                  $ref: "#/definitions/User"
            example:
              users:
                - id: 1
                  firstname: "John"
                  lastname: "Doe"
                  status: "manager"
                  active: true
                - id: 2
                  firstname: "Jane"
                  lastname: "Doe"
                  status: "waiter"
                  active: true
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
    post:
      tags:
        - "Users"
      summary: "Create a new user"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "User object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - "application/json"
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              user:
                $ref: "#/definitions/User"
            example:
              user:
                id: 3
                firstname: "Alice"
                lastname: "Smith"
                status: "waiter"
                active: true
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"
  /users/{id}:
    parameters:
      - $ref: "#/parameters/userIdParam"
    get:
      tags:
        - "Users"
      summary: "Get a user by ID"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
            properties:
              user:
                $ref: "#/definitions/User"
            example:
              user:
                id: 1
                firstname: "John"
                lastname: "Doe"
                status: "manager"
                active: true
        "404":
          description: "Not Found"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "User not found"
        "500":
          description: "Internal Server Error
      tags:
        - "Table Tips"
      summary: "Create a table"
      consumes:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Table object that needs to be added to the system"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
            example:
              name: "Table 1"
      produces:
        - "application/json"
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              table:
                $ref: "#/definitions/RestaurantTable"
            example:
              table:
                id: 1
                name: "Table 1"
        "400":
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Bad Request"
        "500":
          description: "Internal Server Error"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
            example:
              error: "Internal Server Error"

parameters:
  userIdParam:
    name: "id"
    in: "path"
    description: "ID of user to return"
    required: true
    type: "integer"
    format: "int64"
    example: 1
  tipIdParam:
    name: "id"
    in: "path"
    description: "ID of tip to return"
    required: true
    type: "integer"
    format: "int64"
    example: 1


