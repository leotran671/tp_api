/* SWAGGER ADMIN */

/**
 * @swagger
 * /admin:
 *  post:
 *      summary: Se connecter à l'interface administrateur
 *      description: Utilisé pour se connecter à l'interface administrateur en utilisant un pincode valide.
 *      parameters:
 *        - in: body
 *          name: pincode
 *          description: Le pincode pour se connecter.
 *          required: true
 *          schema:
 *            type: object
 *            properties:
 *              pincode:
 *                type: string
 *                description: Le pincode pour se connecter.
 *                example: "1234"
 *      responses:
 *          '200':
 *              description: Connexion réussie.
 *          '404':
 *              description: Pincode invalide.

/* SWAGGER USER */

/**
 * @swagger
 * paths:
 *  /user:
 *    get:
 *      summary: Récupérer tous les utilisateurs
 *      description: Récupère tous les utilisateurs existants.
 *      responses:
 *          '200':
 *              description: Requête réussie.
 *              content:
 *                  application/json:
 *                      schema:
 *                          type: array
 *                          items:
 *                              $ref: '#/components/schemas/User'
 *          '500':
 *              description: Erreur serveur lors de la récupération des utilisateurs.

/**
 * @swagger
 * paths:
 *  /user/{id}:
 *    get:
 *      summary: Récupérer un utilisateur par ID
 *      description: Récupère un utilisateur en utilisant son ID.
 *      parameters:
 *         - in: path
 *           name: id
 *           type: integer
 *           required: true
 *           description: ID de l'utilisateur à récupérer.
 *      responses:
 *         '200':
 *            description: Requête réussie.
 *            content:
 *                application/json:
 *                    schema:
 *                        $ref: '#/components/schemas/User'
 *         '500':
 *           description: Erreur serveur lors de la récupération de l'utilisateur.
 *         '404':
 *           description: Utilisateur non trouvé.

/**
 * @swagger
 * /user:
 *   post:
 *     summary: Créer un nouvel utilisateur
 *     description: Crée un nouvel utilisateur en utilisant les informations fournies.
 *     requestBody:
 *       description: Informations sur le nouvel utilisateur.
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/NewUser'
 *     responses:
 *       '200':
 *         description: Nouvel utilisateur créé avec succès.
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 id:
 *                   type: integer
 *                   description: ID de l'utilisateur créé.
 *                   example: 1
 *       '500':
 *         description: Erreur serveur lors de la création du nouvel utilisateur.


 /* SWAGGER TIPS */

/**
 * @swagger
 * paths:
 *  /tips:
 *   get:
 *    summary: Récupérer tous les tips
 *    description: Récupère tous les tips
 *    responses:
 *     '200':
 *      description: A successful response
 *     '500':
 *      description: Erreur de serveur lors de la récupération des tips
 */

/**
 * @swagger
 * paths:
 *  /tips/{id}:
 *    get:
 *      summary: Récupérer un tip par ID
 *      description: Récupère un tip par son ID
 *      parameters:
 *         - in: path
 *           name: id
 *           type: integer
 *           required: true
 *           description: ID du tip
 *      responses:
 *         '200':
 *            description: A successful response
 *         '500':
 *           description: Erreur de serveur lors de la récupération du tip
 *         '404':
 *           description: Tip non trouvé
 */

/**
 * @swagger
 * /tips:
 *   post:
 *     summary: Créer un nouveau tip
 *     description: Crée un nouveau tip avec les informations fournies
 *     parameters:
 *       - in: body
 *         name: tip
 *         description: Les informations du nouveau tip.
 *         required: true
 *         schema:
 *           type: object
 *           properties:
 *             title:
 *               type: string
 *             description:
 *               type: string
 *             amount:
 *               type: integer
 *     responses:
 *       200:
 *         description: ID du nouveau tip créé avec succès.
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 id:
 *                   type: integer
 *                   description: ID du nouveau tip.
 *                   example: 1
 *       500:
 *         description: Erreur de serveur lors de la création du nouveau tip.
 */

/**
 * @swagger
 * paths:
 *  /tips/{id}:
 *   put:
 *      summary: Mettre à jour un tip
 *      description: Mettre à jour un tip avec les nouvelles informations fournies
 *      parameters:
 *         - in: path
 *           name: id
 *           type: integer
 *           required: true
 *           description: ID du tip
 *         - in: body
 *           name: tip
 *           description: Objet tip contenant les nouvelles informations à mettre à jour
 *           required: true
 *           schema:
 *             type: object
 *             properties:
 *               title:
 *                 type: string
 *               description:
 *                 type: string
 *               amount:
 *                 type: integer
 *      responses:
 *         '200':
 *            description: A successful response
 *         '500':
 *            description: Erreur de serveur lors de la mise à jour du tip
 *         '404':
 *            description: Tip non trouvé
 */

/**
 * @swagger
 * paths:
 *  /api/tips/{id}:
 *    delete:
 *      summary: Supprimer un tip
 *      description: Supprimer un tip par son ID.
 *      tags:
 *        - Tips
 *      parameters:
 *        - in: path
 *          name: id
 *          required: true
 *          description: ID du tip à supprimer.
 *          schema:
 *            type: integer
 *      responses:
 *        '200':
 *          description: Le tip a été supprimé avec succès.
 *        '404':
 *          description: Aucun tip trouvé avec cet ID.
 *        '500':
 *          description: Erreur de serveur lors de la suppression du tip.
 */

/**
 * @swagger
 * paths:
 *  /tips/create-table:
 *    post:
 *      summary: Créer une nouvelle table de tips.
 *      description: Crée une nouvelle table de tips avec un nom donné.
 *      parameters:
 *        - in: body
 *          name: name
 *          description: Le nom de la nouvelle table de tips.
 *          required: true
 *          schema:
 *            type: object
 *            properties:
 *              name:
 *                type: string
 *      responses:
 *        200:
 *          description: ID de la nouvelle table de tips créée avec succès.
 *          content:
 *            application/json:
 *              schema:
 *                type: object
 *                properties:
 *                  id:
 *                    type: integer
 *                    description: ID de la nouvelle table de tips.
 *                    example: 1
 *        500:
 *          description: Erreur de serveur lors de la création de la nouvelle table de tips.
 */


/* SWAGGER TIPSPAYMENT */

/**
 * @swagger
 * paths:
 *  /tipspayment:
 *   post:
 *    summary: Créer un tips payment
 *    parameters:
 *     - name: id_user
 *       in: body
 *       description: ID de l'utilisateur
 *       required: true
 *       schema:
 *          type: object
 *          properties:
 *             id_user:
 *              type: integer
 *              description: ID de l'utilisateur
 *              example: 1
 *             amount:
 *                type: integer
 *                description: Montant du tips
 *                example: 10
 * 
 *    responses:
 *     '200':
 *         description: ID du tips payment créé avec succès
 */

/**
 * @swagger
 * paths:
 *  /tipspayment/{id}:
 *      get:
 *        summary: Récupérer un tips payment
 *        description: Récupérer un tips payment par son ID
 *        parameters:
 *          - in: path
 *            name: id
 *            type: integer
 *            required: true
 *            description: ID du tips payment
 *        responses:
 *         '200':
 *           description: Objet tips payment retourné avec succès
 *           content:
 *             application/json:
 *               schema:
 *                 type: object
 *                 properties:
 *                   id:
 *                     type: integer
 *                     description: ID du tips payment
 *                   id_user:
 *                     type: integer
 *                     description: ID de l'utilisateur associé au tips payment
 *                   amount:
 *                     type: integer
 *                     description: Montant du tips payment
 *                   created_at:
 *                     type: string
 *                     format: date-time
 *                     description: Date de création du tips payment
 *         '404':
 *           description: Tips payment non trouvé
 */

/**
 * @swagger
 * paths:
 *  /tipspayment:
 *   get:
 *    summary: Tout les pourboires versés
 *    description: Récupère tout les pourboires versés
 *    responses:
 *     '200':
 *      description: Liste de tous les tips payments retournée avec succès
 *      content:
 *        application/json:
 *          schema:
 *            type: array
 *            items:
 *              type: object
 *              properties:
 *                id:
 *                  type: integer
 *                  description: ID du tips payment
 *                id_user:
 *                  type: integer
 *                  description: ID de l'utilisateur associé au tips payment
 *                amount:
 *                  type: integer
 *                  description: Montant du tips payment
 *                created_at:
 *                  type: string
 *                  format: date-time
 *                  description: Date de création du tips payment
 *     '500':
 *      description: Erreur de serveur lors de la récupération des tips payments
 */

/**
 * @swagger
 * paths:
 *  /tipspayment/{id}:
 *   put:
 *      summary: Mettre à jour un tips payment
 *      description: Mettre à jour un tips payment par son ID
 *      parameters:
 *        - in: path
 *          name: id
 *          type: integer
 *          required: true
 *          description: ID du tips payment
 *        - in: body
 *          name: tips payment
 *          description: Objet tips payment contenant les nouvelles informations à mettre à
        - in: body
          name: tips payment
          description: Objet tips payment contenant les nouvelles informations à mettre à jour
          required: true
          schema:
            type: object
            properties:
              id_user:
                type: integer
                description: ID de l'utilisateur
                example: 1
              amount:
                type: integer
                description: Montant du tips
                example: 20
        responses:
          '200':
            description: Tips payment mis à jour avec succès
          '500':
            description: Erreur de serveur lors de la mise à jour du tips payment
          '404':
            description: Tips payment non trouvé

/* SWAGGER SERVICE */

/**
 * @swagger
 * paths:
 *  /service:
 *    get:
 *      description: Récupérer tous les services
 *      responses:
 *        '200':
 *          description: A successful response
 *        '500':
 *          description: Erreur de serveur lors de la récupération des services
 */

/**
 * @swagger
 * paths:
 *  /service/{id}:
 *    get:
 *      description: Récupérer un service par ID
 *      parameters:
 *         - in: path
 *           name: id
 *           type: integer
 *           required: true
 *           description: ID du service
 *      responses:
 *        '200':
 *          description: A successful response
 *        '500':
 *          description: Erreur de serveur lors de la récupération du service
 *        '404':
 *          description: Service non trouvé
 */

/**
 * @swagger
 * paths:
 *  /service:
 *   post:
 *     summary: Créer un nouveau service
 *     description: Créer un nouveau service
 *     parameters:
 *       - in: body
 *         name: service
 *         description: Les informations du service.
 *         required: true
 *         schema:
 *           type: object
 *           properties:
 *             name:
 *               type: string
 *             description:
 *               type: string
 *             active:
 *               type: boolean
 *     responses:
 *       200:
 *         description: ID du nouveau service créé avec succès.
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 id:
 *                   type: integer
 *                   description: ID du nouveau service.
 *                   example: 1
 *       500:
 *         description: Erreur de serveur lors de la création du nouveau service.
 */

/**
 * @swagger
 * paths:
 *  /service/{id}:
 *    put:
 *      summary: Mettre à jour un service
 *      description: Mettre à jour un service
 *      parameters:
 *        - in: path
 *          name: id
 *          type: integer
 *          required: true
 *          description: ID du service
 *        - in: body
 *          name: service
 *          description: Objet service contenant les nouvelles informations à mettre à jour.
 *          required: true
 *          schema:
 *            type: object
 *            properties:
 *              name:
 *                type: string
 *              description:
 *                type: string
 *              active:
 *                type: boolean
 *      responses:
 *        '200':
 *          description: A successful response
 *        '500':
 *          description: Erreur de serveur lors de la mise à jour du service
 *        '404':
 *          description: Service non trouvé
 */

/**
 * @swagger
 * paths:
 *  /service/{id}:
 *    delete:
 *      description: Supprimer un service
 *      parameters:
 *        - in: path
 *          name: id
 *          type: integer
 *          required: true
 *          description: ID du service
 *      responses:
 *        '200':
 *          description: Service supprimé avec succès
 *        '500':
 *          description: Erreur de serveur lors de la suppression du service
 *        '404':
 *          description: Service non trouvé
 */

/* SWAGGER SERVICEUSER */

/**
 * @swagger
 * paths:
 *  /serviceUser:
 *   get:
 *    summary: Tout les services pour un user
 *    description: Récupère tout les services pour un user
 *    parameters:
 *       - in: query
 *         name: id_user
 *         type: integer
 *         required: true
 *         description: id of the user
 *    responses:
 *     '200':
 *          description: A successful response
 *     '500':
 *          description: Erreur de serveur lors de la récupération des services
 *     '404':
 *         description: Aucun service trouvé pour cet utilisateur
 */

/**
 * @swagger
 * paths:
 *  /serviceUser/assign:
 *   post:
 *     summary: Ajouter un service pour un user
 *     description: Ajouter un service pour un user
 *     parameters:
 *       - in: body
 *         name: service_user
 *         description: Objet service user contenant les informations à ajouter
 *         required: true
 *         schema:
 *           type: object
 *           properties:
 *              id_user:
 *                  type: integer
 *                  description: ID de l'utilisateur
 *                  example: 1
 *              id_service:
 *                  type: integer
 *                  description: ID du service
 *                  example: 1
 *              start_date:
 *                  type: string
 *                  format: date-time
 *                  description: Date de début du service
 *                  example: '2022-04-01T08:00:00.000Z'
 *              end_date:
 *                  type: string
 *                  format: date-time
 *                  description: Date de fin du service
 *                  example: '2022-04-01T16:00:00.000Z'
 *     responses:
 *       '200':
 *          description: Service ajouté avec succès
 *       '500':
 *          description: Erreur de serveur lors de l'ajout du service
 */

/* SWAGGER STATS */

/**
 * @swagger
 * paths:
 *  /api/stats:
 *   get:
 *    summary: Total des pourboires versés pour le mois en cours
 *    description: Récupère le total des pourboires versés pour le mois en cours
 *    responses:
 *     '200':
 *       description: Total des pourboires versés pour le mois en cours récupéré avec succès
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               tips_total:
 *                 type: number
 *                 description: Total des pourboires versés pour le mois en cours
 *                 example: 100
 *     '500':
 *      description: Erreur de serveur lors de la récupération du total des pourboires versés pour le mois en cours
 */
